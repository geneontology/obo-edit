#!/usr/bin/perl -w

##
##
##

use strict;
use utf8;
use Getopt::Std;
use Email::Simple;
use Email::Send;
use vars qw(
	    $opt_h
	    $opt_v
	    $opt_b
	    $opt_t
	   );

## Sane and easy to modify defaults.
my %local = (
	     BODY => 'This is a reminder.',
	     TITLE => 'reminder'
	    );

getopts('hvt:b:');


##
if ( $opt_h ) {
  usage();
  exit();
}


##
## Preparation with command line arguments.
##

if ( $opt_v ) {
  print "Will be verbose.\n"; }

## Check our options and set variables accordingly.
$local{TITLE} = $opt_t if $opt_t;
$local{BODY} = $opt_b if $opt_b;

## Write it.
print "Writing..." if $opt_v;
## BUG: There seems to bea bug in new.
#my $email = Email::Simple->new($local{BODY});
my $email = Email::Simple->new("");
$email->body_set($local{BODY});
$email->header_set("From", 'sjcarbon@localhost');
$email->header_set("To", 'sjcarbon@localhost');
$email->header_set("Subject", $local{TITLE});
print "done.\n" if $opt_v;

## Send it.
print "Sending..." if $opt_v;
Email::Send->new({mailer => 'Sendmail'})->send($email->as_string);
#my $sender = Email::Send->new({mailer => 'SMTP'});
#$sender->mailer_args([Host => 'smtp.lbl.govt']);
#$sender->send($email->as_string);
print "done.\n" if $opt_v;



##########
##
## Subroutines.
##
##########


##
sub usage{

  print <<EOC;

  Usage:
     reminder [-h] [-v] [-t <title>] [-b <body>]

  General Options:
     -h               Print this message.
     -v               Enable more verbose messages. This is useful for checking
                      installation errors.

  Other options:

     -t <title>       The title of the reminder message.
     -b <body>        The body of the reminder message.

EOC

}
