
<!-- 

  GODB PRESTORE EVENTS

  This DTD describes the transformed XML events produced by
  GO::Handlers::godb_prestore

  This DTD maps isomorphically to the go-database schema
  Every element should map to either a godb table name or column name

  For a details on the semantics of each of the elements, see godb
  schema; go-dev/sql/modules

  XML matching this DTD can be loaded via DBIx::DBStag->storenode()
  See the module GO::Handlers::godb in the go-db-perl lib

  Database loading is a chain of events:

    Module:   GO::Parsers::*
    Function: parses any known format into an XML event stream
    Input:    file in one format:
               {obo,go_assoc,go_ont,go_def,go_xref}
    Output:   xml events conforming to 
               {obo,go_assoc,go_ont,go_def,go_xref}-events.dtd

    Module:   GO::Handlers::godb_prestore
    Function: intercepts an event stream and generates
              dbschema events
    Input:    xml events conforming to 
               {obo,go_assoc,go_ont,go_def,go_xref}-events.dtd
    Output:   xml events conforming to godb_prestore-events.dtd

    Module:   GO::Handles::godb         [in go-db-perl]
    Function: intercepts dbschema events and loads them into database
    Input:    xml events conforming to godb_prestore-events.dtd
    Output:   SQL calls over DBI/DBStag to load database

SEE ALSO

  DBIx::DBStag
  GO::Parser
  GO::Handler::godb
  go-dev/scripts/go2godb_prestore

-->


<!-- ******************** -->
<!-- ** DOCUMENT ROOT *** -->
<!-- ******************** -->

<!-- obo: (node) -->
<!ELEMENT obo (source_audit|dbstag_metadata|term+|term2term+)+>

<!-- ****************** -->
<!-- **  METADATA    ** -->
<!-- ****************** -->

<!-- source_audit: (node) -->
<!ELEMENT source_audit (source_type|source_path|source_md5|source_mtime)+>

<!-- source_type: (VARCHAR(15)) -->
<!ELEMENT source_type (#PCDATA)>

<!-- source_path: (VARCHAR(31)) -->
<!ELEMENT source_path (#PCDATA)>

<!-- source_md5: (VARCHAR(127)) -->
<!ELEMENT source_md5 (#PCDATA)>

<!-- source_mtime: (INT) -->
<!ELEMENT source_mtime (#PCDATA)>

<!-- dbstag_metadata: (node) -->
<!ELEMENT dbstag_metadata (map+)+>

<!-- map: (VARCHAR(127)) -->
<!ELEMENT map (#PCDATA)>

<!-- ****************** -->
<!-- ** ONTOLOGY ** -->
<!-- ****************** -->

<!-- term: (node) -->
<!ELEMENT term (acc|name?|term_type?|is_obsolete?|is_root?|term_audit?|term_definition?|term_dbxref*|term_synonym*)+>

<!-- acc: (VARCHAR(31)) -->
<!ELEMENT acc (#PCDATA)>

<!-- name: (VARCHAR(255)) -->
<!ELEMENT name (#PCDATA)>

<!-- term_type: (VARCHAR(15)) -->
<!ELEMENT term_type (#PCDATA)>

<!-- is_obsolete: (INT) -->
<!ELEMENT is_obsolete (#PCDATA)>

<!-- is_root: (INT) -->
<!ELEMENT is_root (#PCDATA)>

<!-- term_audit: (node) -->
<!ELEMENT term_audit (term_loadtime)+>

<!-- term_loadtime: (INT) -->
<!ELEMENT term_loadtime (#PCDATA)>

<!-- term_definition: (node) -->
<!ELEMENT term_definition (term_definition?|term_comment?|(#PCDATA))+>

<!-- term_comment: (TEXT) -->
<!ELEMENT term_comment (#PCDATA)>

<!-- term_dbxref: (node) -->
<!ELEMENT term_dbxref (is_for_definition?|dbxref)+>

<!-- is_for_definition: (INT) -->
<!ELEMENT is_for_definition (#PCDATA)>

<!-- dbxref: (node) -->
<!ELEMENT dbxref (xref_key|xref_dbname)+>

<!-- xref_key: (VARCHAR(127)) -->
<!ELEMENT xref_key (#PCDATA)>

<!-- xref_dbname: (VARCHAR(63)) -->
<!ELEMENT xref_dbname (#PCDATA)>

<!-- term_synonym: (node) -->
<!ELEMENT term_synonym (acc_synonym?|type|term_synonym?|(#PCDATA))+>

<!-- acc_synonym: (VARCHAR(31)) -->
<!ELEMENT acc_synonym (#PCDATA)>

<!-- type: (node) -->
<!ELEMENT type (term)+>

<!-- term2term: (node) -->
<!ELEMENT term2term (term1|term2|type)+>

<!-- term1: (node) -->
<!ELEMENT term1 (term)+>

<!-- term2: (node) -->
<!ELEMENT term2 (term)+>

<!-- ****************** -->
<!-- ** ASSOCIATIONS ** -->
<!-- ****************** -->

<!-- assocs: (node) -->
<!ELEMENT assocs (dbset)+>

<!-- dbset: (node) -->
<!ELEMENT dbset (proddb|gene_product+)+>

<!-- proddb: (VARCHAR(7)) -->
<!ELEMENT proddb (#PCDATA)>

<!-- gene_product: (node) -->
<!ELEMENT gene_product (symbol|full_name|dbxref|species|type|gene_product_synonym+|association+)+>

<!-- symbol: (VARCHAR(15)) -->
<!ELEMENT symbol (#PCDATA)>

<!-- full_name: (VARCHAR(255)) -->
<!ELEMENT full_name (#PCDATA)>

<!-- species: (node) -->
<!ELEMENT species (ncbi_taxa_id)+>

<!-- ncbi_taxa_id: (INT) -->
<!ELEMENT ncbi_taxa_id (#PCDATA)>

<!-- gene_product_synonym: (node) -->
<!ELEMENT gene_product_synonym (product_synonym)+>

<!-- product_synonym: (VARCHAR(63)) -->
<!ELEMENT product_synonym (#PCDATA)>

<!-- association: (node) -->
<!ELEMENT association (term|is_not|source_db|assocdate|evidence+)+>

<!-- is_not: (INT) -->
<!ELEMENT is_not (#PCDATA)>

<!-- source_db: (node) -->
<!ELEMENT source_db (db)+>

<!-- db: (node) -->
<!ELEMENT db (name)+>

<!-- assocdate: (INT) -->
<!ELEMENT assocdate (#PCDATA)>

<!-- evidence: (node) -->
<!ELEMENT evidence (code|seq_acc|dbxref|evidence_dbxref?)+>

<!-- code: (VARCHAR(7)) -->
<!ELEMENT code (#PCDATA)>

<!-- seq_acc: (VARCHAR(63)) -->
<!ELEMENT seq_acc (#PCDATA)>

<!-- evidence_dbxref: (INT) -->
<!ELEMENT evidence_dbxref (dbxref)+>

<!-- ****************** -->
