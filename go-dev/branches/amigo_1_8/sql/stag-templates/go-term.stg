:SELECT 
  *
:FROM
  term
  LEFT OUTER JOIN term_dbxref     ON (term.id = term_dbxref.term_id)
  LEFT OUTER JOIN dbxref          ON (term_dbxref.dbxref_id = dbxref.id)
  LEFT OUTER JOIN term_synonym    ON (term.id = term_synonym.term_id)
  LEFT OUTER JOIN term_definition ON (term.id = term_definition.term_id)
:WHERE
    [term.acc => &term_acc&]
    [term.name => &term_name&]
    [term.term_type => &term_type&]
    [term.is_obsolete => &term_is_obsolete&]
    [term.is_root => &term_is_root&]
    [term.id => &term_id&]
    [term_definition.term_definition => &term_definition&]
:ORDER BY term.name
:USE NESTING (set(term(term_dbxref(dbxref))(term_synonym)(term_definition)))

//
schema: go
desc: 

  Fetches a metadata about a GO term - synonyms, comments, definition,
  dbxref links to analogous terms in other ontologies.

  Does not fetch graph/relationship data

example_input: term_acc => SELECT DISTINCT term.acc FROM term INNER JOIN term2term ON (term.id = term2term.term1_id) ORDER BY term.acc DESC
example_input: term_name => SELECT DISTINCT term.name FROM term INNER JOIN term2term ON (term.id = term2term.term1_id) WHERE name like '%binding%' ORDER BY term.name DESC
