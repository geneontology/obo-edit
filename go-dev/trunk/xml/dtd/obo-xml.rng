<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <start>
    <a:documentation>OBO-XML 1.2
$Id: obo-xml.rng,v 1.3 2009/11/10 22:56:15 cmungall Exp $

This is an XML representation of the Obo-text file format, for
modeling any GO or OBO ontology

The master schema is the Relax NG compact syntax version (.rnc)
The .rng and .xsd file is generated from these

See also the obo 1.2 file format specification</a:documentation>
    <ref name="obo"/>
  </start>
  <define name="obo">
    <element name="obo">
      <a:documentation>top-level element corresponding to an ontology of part of an ontology</a:documentation>
      <interleave>
        <zeroOrMore>
          <ref name="source"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="header"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="term"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="typedef"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="instance"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="source">
    <element name="source">
      <a:documentation>metadata on the source file</a:documentation>
      <interleave>
        <optional>
          <ref name="source_id"/>
        </optional>
        <optional>
          <ref name="source_type"/>
        </optional>
        <optional>
          <ref name="source_fullpath"/>
        </optional>
        <optional>
          <ref name="source_path"/>
        </optional>
        <optional>
          <ref name="source_md5"/>
        </optional>
        <optional>
          <ref name="source_mtime"/>
        </optional>
        <optional>
          <ref name="source_parsetime"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="source_id">
    <element name="source_id">
      <text/>
    </element>
  </define>
  <define name="source_type">
    <element name="source_type">
      <text/>
    </element>
  </define>
  <define name="source_path">
    <element name="source_path">
      <text/>
    </element>
  </define>
  <define name="source_fullpath">
    <element name="source_fullpath">
      <text/>
    </element>
  </define>
  <define name="source_md5">
    <element name="source_md5">
      <text/>
    </element>
  </define>
  <define name="source_mtime">
    <element name="source_mtime">
      <text/>
    </element>
  </define>
  <define name="source_parsetime">
    <element name="source_parsetime">
      <text/>
    </element>
  </define>
  <define name="header">
    <element name="header">
      <a:documentation>ontology metadata</a:documentation>
      <interleave>
        <optional>
          <ref name="format-version"/>
        </optional>
        <optional>
          <ref name="data-version"/>
        </optional>
        <optional>
          <ref name="date"/>
        </optional>
        <optional>
          <ref name="saved-by"/>
        </optional>
        <optional>
          <ref name="auto-generated-by"/>
        </optional>
        <optional>
          <ref name="default-namespace"/>
        </optional>
        <optional>
          <ref name="remark"/>
        </optional>
        <zeroOrMore>
          <ref name="subsetdef"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="synonymtypedef"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="idspace"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="format-version">
    <element name="format-version">
      <a:documentation>Should be 1.2</a:documentation>
      <text/>
    </element>
  </define>
  <define name="date">
    <element name="date">
      <a:documentation>In DD.MM.YYYY time format</a:documentation>
      <text/>
    </element>
  </define>
  <define name="saved-by">
    <element name="saved-by">
      <a:documentation>username of last curator to edit file</a:documentation>
      <text/>
    </element>
  </define>
  <define name="auto-generated-by">
    <element name="auto-generated-by">
      <a:documentation>name of program that wrote file</a:documentation>
      <text/>
    </element>
  </define>
  <define name="default-namespace">
    <element name="default-namespace">
      <a:documentation>ontology-wide default</a:documentation>
      <text/>
    </element>
  </define>
  <define name="remark">
    <element name="remark">
      <a:documentation>description of ontology</a:documentation>
      <text/>
    </element>
  </define>
  <define name="subsetdef">
    <element name="subsetdef">
      <a:documentation>A subset (aka slim) is the name of a view over one or more ontologies
See also the subset element</a:documentation>
      <interleave>
        <ref name="id"/>
        <ref name="name"/>
        <zeroOrMore>
          <ref name="dbxref"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="synonymtypedef">
    <element name="synonymtypedef">
      <a:documentation>individual obo files can define their own synonym types</a:documentation>
      <interleave>
        <ref name="id"/>
        <optional>
          <ref name="name"/>
        </optional>
        <optional>
          <ref name="scope"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="idspace">
    <element name="idspace">
      <a:documentation>An ID space places an OBO Local IDSpace (e.g. GO, CL, CHEBI, FMA)
to a global IDSpace (e.g. an LSID prefix)
This can be used to expand an ID for export to RDF/OWL</a:documentation>
      <interleave>
        <ref name="local"/>
        <ref name="global"/>
        <zeroOrMore>
          <ref name="comment"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="local">
    <element name="local">
      <a:documentation>e.g. GO, CL, PATO</a:documentation>
      <data type="NMTOKEN"/>
    </element>
  </define>
  <define name="global">
    <element name="global">
      <a:documentation>A URI prefix; this uniquely identify this ontology in a global
context</a:documentation>
      <text/>
    </element>
  </define>
  <define name="scope">
    <element name="scope">
      <a:documentation>synonym scope - EXACT, BROAD, NARROW, RELATED</a:documentation>
      <text/>
    </element>
  </define>
  <define name="term">
    <element name="term">
      <a:documentation>Terms are the fundamental units in an obo ontology
Also known as classes
Note: here 'term' refers to the primary term - synonyms are a
a different representational entity</a:documentation>
      <interleave>
        <ref name="id"/>
        <ref name="name"/>
        <ref name="namespace"/>
        <optional>
          <ref name="def"/>
        </optional>
        <zeroOrMore>
          <ref name="is_a"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="alt_id"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="subset"/>
        </zeroOrMore>
        <optional>
          <ref name="comment"/>
        </optional>
        <optional>
          <ref name="is_anonymous"/>
        </optional>
        <optional>
          <ref name="is_obsolete"/>
        </optional>
        <zeroOrMore>
          <ref name="consider"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="replaced_by"/>
        </zeroOrMore>
        <optional>
          <ref name="is_root"/>
        </optional>
        <zeroOrMore>
          <ref name="xref_analog"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="synonym"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="relationship"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="intersection_of"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="union_of"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="disjoint_from"/>
        </zeroOrMore>
        <optional>
          <ref name="lexical_category"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="id">
    <element name="id">
      <a:documentation>Unique identifier
If this is for a term, then the ID is
a OBO ID, typically of the form LocalIDSpace:LocalID</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="name">
    <element name="name">
      <a:documentation>A label intended for humans. Unique within a namespace</a:documentation>
      <text/>
    </element>
  </define>
  <define name="namespace">
    <element name="namespace">
      <a:documentation>A label identifying the ontology. names should be unique within namespaces
NOTE: this is different from how the term 'namespace' is used in RDF/XML/OWL
 the RDF conception of namespace maps to OBO ID-Spaces</a:documentation>
      <text/>
    </element>
  </define>
  <define name="def">
    <element name="def">
      <a:documentation>natural language definition; includes optional provenance dbxrefs</a:documentation>
      <interleave>
        <ref name="defstr"/>
        <zeroOrMore>
          <ref name="dbxref"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="defstr">
    <element name="defstr">
      <a:documentation>free text</a:documentation>
      <text/>
    </element>
  </define>
  <define name="xref_analog">
    <element name="xref_analog">
      <a:documentation>A record that corresponds to a term
 the exact semantics are not defined - may be for an equivalent term
 (eg from EC or MetaCyc)
 or a related term (eg from InterPro)</a:documentation>
      <interleave>
        <ref name="acc"/>
        <ref name="dbname"/>
        <optional>
          <ref name="name"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="is_a">
    <element name="is_a">
      <a:documentation>A subtype relation
Should conform to:
http://obo.sf.net/relationship/#OBO_REL:is_a</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="relationship">
    <element name="relationship">
      <a:documentation>A link to another term
It is  recommended that type is drawn from:
http://obofoundry.org/ro
Follows in an ALL-SOME fashion; eg all instances of the source term
stand in this relationship to the 'to' term</a:documentation>
      <interleave>
        <ref name="type"/>
        <ref name="to"/>
      </interleave>
    </element>
  </define>
  <define name="type">
    <element name="type">
      <a:documentation>here used to indicate a relation</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="to">
    <element name="to">
      <a:documentation>A term linked to</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="consider">
    <element name="consider">
      <a:documentation>An optional replacement term for obsoletes</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="replaced_by">
    <element name="replaced_by">
      <a:documentation>A mandatory replacement term for obsoletes</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="alt_id">
    <element name="alt_id">
      <a:documentation>A secondary identifier </a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="subset">
    <element name="subset">
      <a:documentation>indicates that the term belongs to a subset (view)</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="comment">
    <element name="comment">
      <a:documentation>gloss or additional notes on a term that does not belong in definition</a:documentation>
      <text/>
    </element>
  </define>
  <define name="is_anonymous">
    <element name="is_anonymous">
      <a:documentation>advanced feature:
anonymous terms do not receive stable IDs, they are  there primarily
to define other terms
corresponds to rdf bNodes</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_obsolete">
    <element name="is_obsolete">
      <a:documentation>true if the term is obsoleted
in this case the term is no longer a class</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_root">
    <element name="is_root">
      <a:documentation>may be set to true if this is a root in the current ontology;
optional - it should not be assumed that this is set</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="synonym">
    <element name="synonym">
      <a:documentation>Alternate term (alias)</a:documentation>
      <interleave>
        <optional>
          <attribute name="scope">
            <a:documentation>exact, narrow, ...</a:documentation>
          </attribute>
        </optional>
        <optional>
          <attribute name="synonym_type"/>
        </optional>
        <ref name="synonym_text"/>
        <zeroOrMore>
          <ref name="dbxref"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="synonym_text">
    <element name="synonym_text">
      <a:documentation>The alias string</a:documentation>
      <text/>
    </element>
  </define>
  <define name="lexical_category">
    <element name="lexical_category">
      <a:documentation>e.g. adj, noun:
this element is experimental and not stable
DEPRECATED</a:documentation>
      <text/>
    </element>
  </define>
  <define name="intersection_of">
    <element name="intersection_of">
      <a:documentation>Terms can be defined by set-intersection (cross-products)
A cross-product corresponds to two or more intersection_of elements
Each intersection_of corresponds to a class or link to a class;
Typically a term will be defined by a genus and 1 or more differentia.
For the genus, the type element will be omitted.
Corresponds to owl:intersectionOf</a:documentation>
      <interleave>
        <optional>
          <ref name="type"/>
        </optional>
        <ref name="to"/>
      </interleave>
    </element>
  </define>
  <define name="union_of">
    <element name="union_of">
      <a:documentation>Corresponds to owl:unionOf</a:documentation>
      <text/>
    </element>
  </define>
  <define name="disjoint_from">
    <element name="disjoint_from">
      <a:documentation>set-disjointness between two classes</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="typedef">
    <element name="typedef">
      <a:documentation>For representation of relations and datatype properties</a:documentation>
      <interleave>
        <ref name="id"/>
        <ref name="name"/>
        <ref name="namespace"/>
        <zeroOrMore>
          <ref name="is_a"/>
        </zeroOrMore>
        <optional>
          <ref name="def"/>
        </optional>
        <optional>
          <ref name="domain"/>
        </optional>
        <optional>
          <ref name="range"/>
        </optional>
        <zeroOrMore>
          <ref name="consider"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="replaced_by"/>
        </zeroOrMore>
        <optional>
          <ref name="inverse_of"/>
        </optional>
        <optional>
          <ref name="is_metadata_tag"/>
        </optional>
        <optional>
          <ref name="is_transitive"/>
        </optional>
        <optional>
          <ref name="is_symmetric"/>
        </optional>
        <optional>
          <ref name="is_anti_symmetric"/>
        </optional>
        <optional>
          <ref name="is_reflexive"/>
        </optional>
        <zeroOrMore>
          <ref name="transitive_over"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="holds_over_chain"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="xref_analog"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="synonym"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="relationship"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="intersection_of"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="union_of"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="disjoint_from"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="inverse_of">
    <element name="inverse_of">
      <a:documentation>instance-level inverse
if R inverse_of R', and x R y (where x and y are instances)
then y R' x</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="domain">
    <element name="domain">
      <a:documentation>advanced.
if the domain of a relation R is D, then
instances that are the source of a relation R must be instances of D
Note: open-world holds
Equivalent to rdfs:domain</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="range">
    <element name="range">
      <a:documentation>advanced.
if the range of a relation R is X, then
instances that are the target of a relation R must be instances of X
Note: open-world holds
Equivalent to rdfs:domain</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="is_transitive">
    <element name="is_transitive">
      <a:documentation>See http://obo.sf.net/relationship/</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_symmetric">
    <element name="is_symmetric">
      <a:documentation>See http://obo.sf.net/relationship/</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_anti_symmetric">
    <element name="is_anti_symmetric">
      <a:documentation>See http://obo.sf.net/relationship/</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_reflexive">
    <element name="is_reflexive">
      <a:documentation>See http://obo.sf.net/relationship/</a:documentation>
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="is_metadata_tag">
    <element name="is_metadata_tag">
      <ref name="boolean_Type"/>
    </element>
  </define>
  <define name="transitive_over">
    <element name="transitive_over">
      <a:documentation>R transitive_over S, x R y, y S z =&gt; x R z</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="holds_over_chain">
    <element name="holds_over_chain">
      <a:documentation>R holds_over_chain S.T, x S y, y T z =&gt; x R z</a:documentation>
      <oneOrMore>
        <ref name="relation"/>
      </oneOrMore>
    </element>
  </define>
  <define name="relation">
    <element name="relation">
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="instance">
    <element name="instance">
      <a:documentation>An instance is a representation of a particular entity
in contrast to the general entities represented by term</a:documentation>
      <interleave>
        <ref name="id"/>
        <ref name="name"/>
        <ref name="namespace"/>
        <ref name="instance_of"/>
        <zeroOrMore>
          <ref name="property_value"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="instance_of">
    <element name="instance_of">
      <a:documentation>An instantiation relation
Should conform to:
http://obo.sf.net/relationship/#OBO_REL:instance_of</a:documentation>
      <ref name="identifier_Type"/>
    </element>
  </define>
  <define name="property_value">
    <element name="property_value">
      <a:documentation>An instance level relationship or a data value for an instance</a:documentation>
      <interleave>
        <ref name="type"/>
        <optional>
          <ref name="value"/>
        </optional>
        <optional>
          <ref name="to"/>
        </optional>
        <ref name="datatype"/>
      </interleave>
    </element>
  </define>
  <define name="value">
    <element name="value">
      <data type="string"/>
    </element>
  </define>
  <define name="datatype">
    <element name="datatype">
      <data type="string"/>
    </element>
  </define>
  <define name="dbxref">
    <element name="dbxref">
      <a:documentation>A link to a record in a database</a:documentation>
      <interleave>
        <ref name="acc"/>
        <ref name="dbname"/>
        <optional>
          <ref name="name"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="acc">
    <element name="acc">
      <a:documentation>The local name, ID or accession in a database record</a:documentation>
      <text/>
    </element>
  </define>
  <define name="dbname">
    <element name="dbname">
      <a:documentation>The authority name, ID-space or database name in a database record
typically a short form (eg FlyBase, UniProt)
can be expanded to long form using idspace header tag</a:documentation>
      <text/>
    </element>
  </define>
  <define name="synonym_category">
    <element name="synonym_category">
      <a:documentation>ontology-specific synonym types</a:documentation>
      <interleave>
        <ref name="id"/>
        <ref name="name"/>
        <optional>
          <ref name="namespace"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="boolean_Type">
    <data type="string"/>
  </define>
  <define name="identifier_Type">
    <data type="string"/>
  </define>
  <define name="subset_identifier_Type">
    <data type="string"/>
  </define>
</grammar>
