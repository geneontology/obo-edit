:SELECT *
:FROM
    gene_product
    INNER JOIN dbxref ON (gene_product.dbxref_id = dbxref.id)
    INNER JOIN association ON (gene_product.id = association.gene_product_id)
    INNER JOIN graph_path ON (association.term_id = graph_path.term2_id)
    INNER JOIN term ON (graph_path.term1_id = term.id)
    INNER JOIN term AS associated_term ON (graph_path.term2_id = associated_term.id)
    INNER JOIN gene_product_seq ON (gene_product.id = gene_product_seq.gene_product_id)
    INNER JOIN seq ON (seq.id = gene_product_seq.seq_id)
:WHERE
    [term.acc => &term_acc&]
    [term.name => &term_name&]
    [dbxref.xref_key => &product_acc&]
    [dbxref.xref_dbname => &product_dbname&]
    [gene_product.symbol => &product_symbol&]

:USE NESTING
  (set(term(graph_path(associated_term(association(gene_product(dbxref)(seq)))))))
//
schema: go
desc: Given a GO term, this will display seqs associated with that term.

      This will also traverse the graph (i.e. associations to subtypes of the
      specified term will also be shown).

      Note that for some GO terms (especially near the root), this could
      return very large quantities of data)

example_input: term_acc => SELECT acc FROM term
example_input: term_name => SELECT name FROM term ORDER BY name
