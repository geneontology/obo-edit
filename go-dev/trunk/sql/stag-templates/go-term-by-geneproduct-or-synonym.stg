:SELECT *
:FROM
    term
    INNER JOIN association ON (association.term_id = term.id)
    INNER JOIN gene_product ON (gene_product.id = association.gene_product_id)
    LEFT OUTER JOIN gene_product_synonym ON (gene_product.id = gene_product_synonym.gene_product_id)
    INNER JOIN dbxref ON (gene_product.dbxref_id = dbxref.id)
    INNER JOIN species ON (gene_product.species_id = species.id)

:WHERE
    [(gene_product.symbol => &product_symbol& OR gene_product_synonym.product_synonym => &product_symbol&)]
    [dbxref.xref_key => &product_acc&]
    [dbxref.xref_dbname => &product_dbname&]
    [gene_product.id => &product_id& ]
    [term.acc => &term_acc&]
    [term.name => &term_name&]
    [term.is_obsolete => &term_is_obsolete&]
    [species.common_name => &species_common_name&]
    [species.ncbi_taxa_id => &ncbi_taxa_id&]
    [association.is_not => &negated& ]

:USE NESTING
  (set(gene_product(dbxref)(gene_product_synonym)(species)(association(term))))
//
schema: go
desc: 

   Given a gene product (specified by gene product symbol OR gene
   product synonym), this will find associated terms

example_input: product_symbol => SELECT symbol FROM gene_product
example_input: term_acc => SELECT acc FROM term
example_input: term_name => SELECT name FROM term ORDER BY name
