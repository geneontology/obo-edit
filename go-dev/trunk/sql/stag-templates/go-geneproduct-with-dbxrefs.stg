:SELECT *
:FROM
    gene_product
    LEFT OUTER JOIN gene_product_synonym ON (gene_product.id = gene_product_synonym.gene_product_id)
    INNER JOIN dbxref AS primary_dbxref ON (gene_product.dbxref_id = primary_dbxref.id)
    INNER JOIN species ON (gene_product.species_id = species.id)
    LEFT OUTER JOIN gene_product_seq ON (gene_product.id = gene_product_seq.gene_product_id)
    LEFT OUTER JOIN seq ON (seq.id = gene_product_seq.seq_id)
    LEFT OUTER JOIN seq_dbxref ON (seq.id = seq_dbxref.seq_id)
    INNER JOIN dbxref ON (seq_dbxref.dbxref_id = dbxref.id)

:WHERE
    [(gene_product.symbol => &product_symbol_or_synonym& OR gene_product_synonym.product_synonym => &product_symbol_or_synonym&)]
    [gene_product.symbol => &product_symbol&]
    [dbxref.xref_key => &product_acc&]
    [dbxref.xref_dbname => &product_dbname&]
    [gene_product.id => &product_id& ]
    [species.common_name => &species_common_name&]
    [species.genus => &genus&]
    [species.species => &species&]
    [species.ncbi_taxa_id => &ncbi_taxa_id&]

:USE NESTING
  (set(gene_product(primary_dbxref)(gene_product_synonym)(species)(seq(seq_dbxref(dbxref)))))
//
schema: go
desc: 

   full details on a gene product, include dbxrefs linked via seq

example_input: product_symbol => SELECT symbol FROM gene_product
