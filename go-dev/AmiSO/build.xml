
<project name="amiso" basedir="." default="jar">

	<property name="runtimedir_name" value="runtime" />
	<property name="runtimedir" location="${runtimedir_name}" />
	<property name="librarydir" location="lib" />
	<property name="dest.dir" value="build" />
	<property name="dest.dir.classes" value="${dest.dir}/classes" />
	<property name="dest.dir.lib" value="${dest.dir}/lib" />
	<property name="projectname" value="amiso" />
	<property name="jarfile" location="${librarydir}/runlibs/${projectname}.jar" />
	<property name="main_jar_manifest" location="jar_manifest" />
	<property name="outputdir" value="classes" />
	<property name="sourcedir" value="src" />
	<property name="apidoc_dest" location="docs" />
	<property name="librarydir" location="lib" />
	<property name="releasenotes" location="CHANGES" />
	<property name="tagprefix" value="${projectname}-" />
        <property name="build.dir" value="build"/>

	<!-- dependency information -->
	<property name="bbop_dest" location="../BBOP" />
	<property name="obo_dest" location="../OBO" />
	<property name="obdapi_dest" location="../OBDAPI" />
        <property name="obovocab_dest" location="../obo-vocab-java" />
	
	<fileset dir="${sourcedir}" id="resource_files">
		<include name="**/resources/**" />
		<!-- make sure templates, css, images etc included in jar -->
		<include name="**/pages/**" />
	</fileset>

	<!-- make sure templates, css, images etc included in jar -->
	<fileset id="main_jar_contents" dir="${outputdir}" includes="**/*.class,**/resources/**,**/pages/**" excludes="**/CVS/*" />

	<path id="classpath">
		<fileset refid="library_jars" />
		<fileset dir="${librarydir}/runlibs">
        		<include name="*.jar" />
		</fileset>
		<fileset dir="${librarydir}/buildlibs">
			<include name="*.jar" />
		</fileset>
	</path>
	

	<target name="all" depends="clean, classes, jar, apidocs" description="Cleans and rebuilds from scratch">
	</target>

	<target name="apidocs" description="Build API documentation">
		<javadoc sourcepath="${sourcedir}" classpathref="classpath" defaultexcludes="yes" destdir="${apidoc_dest}" author="true" version="true" use="true" />
	</target>

	
	<fileset dir="${librarydir}/runlibs" id="library_jars">
		<include name="*.jar" />
	</fileset>
	<target name="buildbbop" if="bbop_dest">
		<ant dir="${bbop_dest}" target="jar" inheritAll="false" />
		<copy file="${bbop_dest}/bbop.jar" todir="${librarydir}/runlibs" />
	</target>
	<target name="buildobo" if="obo_dest">
		<ant dir="${obo_dest}" target="jar" inheritAll="false" />
		<copy file="${obo_dest}/obo.jar" todir="${librarydir}/runlibs" />
	</target>
	<target name="buildobdapi" if="obdapi_dest">
		<ant dir="${obdapi_dest}" target="jar" inheritAll="false" />
		<copy file="${obdapi_dest}/lib/runlibs/obdapi.jar" todir="${librarydir}/runlibs" />
	</target>
        <target name="buildobovocab" if="obovocab_dest">
                <ant dir="${obovocab_dest}" target="jar" inheritAll="false" />
                <copy file="${obovocab_dest}/obo-vocab.jar" todir="${librarydir}/runlibs" />
        </target>
	

	<target name="resources">
		<copy todir="${outputdir}">
			<fileset refid="resource_files" />
		</copy>
		</target>

	<target name="classes" depends="buildbbop, resources">
		<mkdir dir="${outputdir}" />
		<javac srcdir="${sourcedir}" destdir="${outputdir}" debug="true">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>

	</target>

	
	<target name="library_jars" depends="buildbbop, buildobo, buildobdapi, buildobovocab">
		<mkdir dir="${runtimedir}" />
		<sync todir="${runtimedir}">
			<fileset refid="library_jars" />
		</sync>
	</target>


	<target name="prepare">
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${dest.dir.classes}" />
		<mkdir dir="${dest.dir.lib}" />
		<mkdir dir="${dest.dir.classes}/META-INF" />

	</target>
	
  


	<target name="checkjar">
		<condition property="main_jar_current">
			<and>
				<available file="${jarfile}" />
				<available file="${main_jar_manifest}" />
				<uptodate targetfile="${jarfile}">
					<srcfiles refid="main_jar_contents" />
				</uptodate>
				<uptodate targetfile="${jarfile}" srcfile="${main_jar_manifest}" />
			</and>
		</condition>
	</target>

	<target name="jar" depends="classes, checkjar" unless="main_jar_current" description="Generate jar file">
		<jar destfile="${jarfile}" manifest="${main_jar_manifest}">
			<fileset refid="main_jar_contents" />
		</jar>
	</target>
 
	<target name="clean" description="Delete all rebuildable resources">
		<echo message="Deleting build directories..." />
		<delete dir="${outputdir}" />
		<delete file="${jarfile}" />
		<delete dir="${apidoc_dest}" />
	</target>


</project>
