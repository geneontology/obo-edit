////
//// Some unit testing for package golr_response.js
////
//// Usage:
////    Command line: "js -f golr_response.js.tests"
////    Interactive: "js -f golr_response.js.tests -f -"
////
//// To get fresh data from an AmiGO install (must be done periodically):
////    cp /srv/www/htdocs/amigo2/javascript/bbop/golr_meta.js /home/sjcarbon/local/src/svn/geneontology/javascript/trunk/_data/
////

// Load testing.
load('test.js');
var mr_t = new bbop.test();

// Correct environment.
load('core.js');
//load('logger.js');
load('golr_response.js');

///
/// Start unit testing.
///

// bbop.golr.response
(function(){

     // Partial data from: http://localhost:8080/solr/select?&qt=standard&indent=on&wt=json&rows=10&start=0&fl=*%2Cscore&facet=true&facet.mincount=1&json.nl=arrarr&facet.field=source&facet.field=evidence_type&facet.field=taxon_label&facet.field=isa_partof_closure_label&facet.field=annotation_extension_class_closure_label&fq=document_category:%22annotation%22&fq=isa_partof_closure:%22GO:0022008%22&fq=-source:%22MGI%22&fq=-evidence_type:%22ISO%22&fq=isa_partof_closure_label:%22cell%20recognition%22&fq=taxon_label:%22Mus%20musculus%22&packet=5&callback_type=search&q=*:*
     // Doc contents removed for convenience.
     var robj = {
	 "responseHeader":{
	     "status":0,
	     "QTime":10,
	     "params":{
		 "facet":"true",
		 "indent":"on",
		 "facet.mincount":"1",
		 "json.nl":"arrarr",
		 "wt":"json",
		 "callback_type":"search",
		 "rows":"10",
		 "fl":"*,score",
		 "start":"0",
		 "q":"*:*",
		 "packet":"5",
		 "facet.field":["source",
				"evidence_type",
				"taxon_label",
				"isa_partof_closure_label",
				"annotation_extension_class_closure_label"],
		 "qt":"standard",
		 "fq":["document_category:\"annotation\"",
		       "isa_partof_closure:\"GO:0022008\"",
		       "-source:\"MGI\"",
		       "-evidence_type:\"ISO\"",
		       "isa_partof_closure_label:\"cell recognition\"",
		       "taxon_label:\"Mus musculus\""]}},
	 "response":{"numFound":8,"start":0,"maxScore":1.0,"docs":[
			 {}, {}, {}, {}, {}, {}, {}, {}]
		    },
	 "facet_counts":{
	     "facet_queries":{},
	     "facet_fields":{
		 "source":
		 [
		     ["UniProtKB",7],
		     ["BHF-UCL",1]],
		 "evidence_type":
		 [
		     ["IMP",5],
		     ["IGI",1],
		     ["ISS",1],
		     ["TAS",1]],
		 "taxon_label":
		 [
		     ["Mus musculus",8]],
		 "isa_partof_closure_label":
		 [
		     ["anatomical structure development",8],
		     ["biological_process",8],
		     ["cell development",8],
		     ["cell differentiation",8],
		     ["cell recognition",8],
		     ["cellular developmental process",8],
		     ["cellular process",8],
		     ["developmental process",8],
		     ["generation of neurons",8],
		     ["multicellular organismal development",8],
		     ["multicellular organismal process",8],
		     ["nervous system development",8],
		     ["neurogenesis",8],
		     ["neuron development",8],
		     ["neuron differentiation",8],
		     ["neuron recognition",8],
		     ["system development",8],
		     ["anatomical structure morphogenesis",6],
		     ["axonogenesis",6],
		     ["cell morphogenesis",6],
		     ["cell morphogenesis involved in differentiation",6],
		     ["cell morphogenesis involved in neuron differentiation",6],
		     ["cell part morphogenesis",6],
		     ["cell projection morphogenesis",6],
		     ["cell projection organization",6],
		     ["cellular component morphogenesis",6],
		     ["cellular component organization",6],
		     ["cellular component organization at cellular level",6],
		     ["cellular component organization or biogenesis",6],
		     ["cellular component organization or biogenesis at cellular level",6],
		     ["neuron projection development",6],
		     ["neuron projection morphogenesis",6],
		     ["axonal fasciculation",5],
		     ["axon choice point recognition",1],
		     ["axon guidance",1],
		     ["axon midline choice point recognition",1],
		     ["chemotaxis",1],
		     ["dendrite self-avoidance",1],
		     ["fasciculation of motor neuron axon",1],
		     ["fasciculation of sensory neuron axon",1],
		     ["locomotion",1],
		     ["response to chemical stimulus",1],
		     ["response to external stimulus",1],
		     ["response to stimulus",1],
		     ["taxis",1]],
		 "annotation_extension_class_closure_label":
		 []},
	     "facet_dates":{},
	     "facet_ranges":{}}};

     // Laziness.
     var bgr = bbop.golr.response;

     // Absolute basics.
     mr_t.is_true(bgr.success(robj), 'looks like success');
     mr_t.is_same_atom(bgr.callback_type(robj), 'search',
		       'looks like a "search"');

     // parameter
     mr_t.is_same_atom(bgr.parameter(robj, 'rows'), '10',
		       'found a parameter');
     
     // row_step
     mr_t.is_same_atom(bgr.row_step(robj), 10,
		       'found a row step');     
     
     // total_documents
     mr_t.is_same_atom(bgr.total_documents(robj), 8,
		       '8 docs');     
     
     // start_document
     mr_t.is_same_atom(bgr.start_document(robj), 1,
		       'no offset start == 1');
     
     // end_document
     mr_t.is_same_atom(bgr.end_document(robj), 8,
		       'no offset end == 8');
     
     // documents
     mr_t.is_same_atom(bgr.documents(robj).length, 8,
		       '8 docs');

     // facet_field_list
     mr_t.is_same_atom(bgr.facet_field_list(robj).length, 5,
		       '5 facet fields');
     mr_t.is_in_list("source", bgr.facet_field_list(robj),
		     "source is in facet list");
     mr_t.is_in_list("evidence_type", bgr.facet_field_list(robj),
		     "evidence_type is in facet list");
     mr_t.is_in_list("taxon_label", bgr.facet_field_list(robj),
		     "taxon_label is in facet list");
     mr_t.is_in_list("isa_partof_closure_label", bgr.facet_field_list(robj),
		     "isa_partof_closure_label is in facet  list");
     mr_t.is_in_list("annotation_extension_class_closure_label",
		     bgr.facet_field_list(robj),
		     "annotation_extension_class_closure_label is in facet list");

     // facet_field
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type').length, 4,
		       '4 evidence_type facets');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[0][0], "IMP",
		       'IMP evidence_type facet');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[0][1], 5,
		       'IMP evidence_type facet count');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[1][0], "IGI",
		       'IGI evidence_type facet');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[1][1], 1,
		       'IGI evidence_type facet count');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[2][0], "ISS",
		       'ISS evidence_type facet');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[2][1], 1,
		       'ISS evidence_type facet count');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[3][0], "TAS",
		       'TAS evidence_type facet');
     mr_t.is_same_atom(bgr.facet_field(robj, 'evidence_type')[3][1], 1,
		       'TAS evidence_type facet count');

     // facet_counts
     mr_t.is_same_atom(bgr.facet_counts(robj)['source']['BHF-UCL'], 1,
		       'random facet count 1');
     mr_t.is_same_atom(bgr.facet_counts(robj)['isa_partof_closure_label']['axonogenesis'], 6, 'random facet count 2');

     // query
     mr_t.is_same_atom(bgr.query(robj), '*:*',
		       'all query');

     // query_filters
     mr_t.is_true(bgr.query_filters(robj)['document_category']['annotation'],
		  '+ document_category annotation');
     mr_t.is_true(bgr.query_filters(robj)['isa_partof_closure']['GO:0022008'],
		  '+ isa_partof_closure GO:0022008');
     mr_t.is_true(bgr.query_filters(robj)['isa_partof_closure_label']['cell recognition'], '+ isa_partof_closure_label cell recognition');
     mr_t.is_true(bgr.query_filters(robj)['taxon_label']['Mus musculus'],
		  '+ taxon_label Mus musculus');
     mr_t.is_false(bgr.query_filters(robj)['source']['MGI'],
		   '- source MGI');
     mr_t.is_false(bgr.query_filters(robj)['evidence_type']['ISO'],
		   '- evidence_type ISO');

     // paging_*
     mr_t.is_false(bgr.paging_p(robj), 'paging: no');
     mr_t.is_false(bgr.paging_previous_p(robj), 'paging: no back');
     mr_t.is_false(bgr.paging_next_p(robj), 'paging: no forward');

 })();

///
/// End unit testing.
///

// Final report.
mr_t.report();
