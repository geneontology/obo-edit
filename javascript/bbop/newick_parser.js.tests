////
//// Some unit testing for newick_parse.js
////
//// Usage:
////    Command line: "js -f newick_parse.tests.js"
////    Interactive: "js -f newick_parse.tests.js -f -"
////


// Load testing.
load('test.js');
var mr_t = new bbop.test();

// Correct environment.
load('core.js');
load('newick_parser.js');
load('../_data/panther-newick.js');
//load('model.js');

///
/// Start unit testing.
///

// ...
(function(){
    
    // Setup.
    var np = new bbop.parser.newick();

    // Minimal.
    mr_t.is_defined(np, 'at least this would be nice');
    mr_t.is_defined(panther_test_01, 'small data is there');
    mr_t.is_defined(panther_test_02, 'big data is there');

    // Can create a token stream.
    var token_stream = np.tokenize(panther_test_01);
    //mr_t.is_x_greater_than_y(token_stream.length, 0 , "doesn't look crazy");


    // mr_t.is_same_atom('a', n1.id(), 'is a');
    // mr_t.is_same_atom('node', n1.type(), 'is a node');
    // n1.id('b');
    // mr_t.is_same_atom('b', n1.id(), 'is b');

})();
