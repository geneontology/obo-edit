<?xml version="1.0" encoding="UTF-8"?>
<project name="OBO-Edit Image Plugins" default="all">

	<property name="developer_email" value="john.richter@aya.yale.edu" />

	<!-- project variables that need to be changed when adapting this file
	     to a new project -->
	<property name="projectname" value="imageplugin" />
	<property name="mylibrarydir" location="lib/imageplugin" />

	<!-- project dependencies -->
	<property name="bbop_dest" location="../BBOP" />
	<property name="obo_dest" location="../OBO" />
	<property name="oboedit_dest" location="../OBO-Edit" />
	
	<!-- project variables that can usually be left alone -->
	<property name="jarfile" location="${projectname}.jar" />
	<property name="main_jar_manifest" location="jar_manifest" />
	<property name="outputdir" value="classes" />
	<property name="sourcedir" value="src" />
	<property name="apidoc_dest" location="docs" />
	<property name="librarydir" location="lib" />
	<property name="releasenotes" location="CHANGES" />
	<property name="tagprefix" value="${projectname}-" />

	<!-- utility program paths -->
	<property name="svnpath" value="/usr/local/bin/svn" />
	<property name="antpath" value="ant" />

	<fileset dir="${sourcedir}" id="resource_files">
		<include name="**/resources/**" />
	</fileset>
	
	<path id="classpath">
		<fileset dir="${librarydir}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${mylibrarydir}">
			<include name="**/*.jar" />
		</fileset>		
	</path>
	
	<target name="resources">
		<copy todir="${outputdir}">
			<fileset refid="resource_files" />
		</copy>
	</target>

	<!-- classes that should appear in the main jar file -->
	<fileset id="main_jar_contents" dir="${outputdir}" includes="**/*.class,**/resources/**" excludes="**/CVS/*" />

	<target name="all" depends="clean, classes, jar, apidocs" description="Cleans and rebuilds from scratch">
	</target>

	<target name="apidocs" description="Build API documentation">
		<javadoc sourcepath="${sourcedir}" classpathref="classpath" defaultexcludes="yes" destdir="${apidoc_dest}" author="true" version="true" use="true" />
	</target>

	<target name="buildobo" if="obo_dest">
		<ant dir="${obo_dest}" target="jar" inheritAll="false" />
		<copy file="${obo_dest}/obo.jar" todir="${librarydir}/buildlibs" />
	</target>

	<target name="buildbbop" if="bbop_dest">
		<ant dir="${bbop_dest}" target="jar" inheritAll="false" />
		<copy file="${bbop_dest}/bbop.jar" todir="${librarydir}/buildlibs" />
	</target>

	<target name="buildoboedit" if="oboedit_dest">
		<ant dir="${oboedit_dest}" target="jar" inheritAll="false" />
		<copy file="${oboedit_dest}/runtime/oboedit.jar" todir="${librarydir}/buildlibs" />
	</target>

	<target name="classes" depends="buildbbop, buildobo, buildoboedit, resources" >
		<mkdir dir="${outputdir}" />
		<javac srcdir="${sourcedir}" destdir="${outputdir}" debug="true">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>

	<target name="checkjar">
		<condition property="main_jar_current">
			<and>
				<available file="${jarfile}" />
				<available file="${main_jar_manifest}" />
				<uptodate targetfile="${jarfile}">
					<srcfiles refid="main_jar_contents" />
				</uptodate>
				<uptodate targetfile="${jarfile}" srcfile="${main_jar_manifest}" />
			</and>
		</condition>
	</target>
	
	<target name="jar" depends="classes, checkjar" description="Generate jar file">
		<mkdir dir="lib/lib"/>
		<echo message="mylibdir = ${mylibrarydir}"/>
		<copy todir="lib/lib">
			<fileset dir="${mylibrarydir}/runlibs">
				<include name="*.jar" />
			</fileset>			
		</copy>
		<jar destfile="${jarfile}" manifest="${main_jar_manifest}">
			<fileset refid="main_jar_contents" />
			<fileset dir="lib" includes="lib/*.jar" />
		</jar>
		<delete dir="lib/lib"/>
	</target>

	<target name="clean" description="Delete all rebuildable resources">
		<echo message="Deleting build directories..." />
		<delete dir="${outputdir}" />
		<delete file="${jarfile}" />
		<delete dir="${runtimedir}" />
		<delete dir="${apidoc_dest}" />
	</target>

	<target name="install" depends="jar" description="Build and install plugin">
		<mkdir dir="${user.home}/.oboeditbeta/extensions" />
		<copy file="${jarfile}" todir="${user.home}/.oboeditbeta/extensions"/>
	</target>
</project>
