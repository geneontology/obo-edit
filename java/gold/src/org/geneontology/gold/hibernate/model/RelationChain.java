package org.geneontology.gold.hibernate.model;

// Generated Nov 2, 2010 3:53:51 PM by Hibernate Tools 3.4.0.Beta1

/**
 * RelationChain generated by hbm2java
 */
public class RelationChain extends GOModel implements java.io.Serializable {

	private String inferredRelation;
	private String relation1;
	private String relation2;
	private Boolean isBidirectional;
	private String ontology;
	
	private Relation inferredRelationObject;
	private Relation relation1Object;
	private Relation relation2Object;
	private Ontology ontologyObject;
	
	
	public RelationChain() {
		String keys[] = {"inferredRelation", "relation1", "relation2", "ontology"};
		this.initUniqueConstraintFields(RelationChain.class, keys);
	}

	public RelationChain(String inferredRelation, String relation1,
			String relation2, Boolean isBidirectional, String ontology) {
		this();
		this.inferredRelation = inferredRelation;
		this.relation1 = relation1;
		this.relation2 = relation2;
		this.isBidirectional = isBidirectional;
		this.ontology = ontology;
	}

	public String getInferredRelation() {
		return this.inferredRelation;
	}

	public void setInferredRelation(String inferredRelation) {
		this.inferredRelation = inferredRelation;
	}

	public String getRelation1() {
		return this.relation1;
	}

	public void setRelation1(String relation1) {
		this.relation1 = relation1;
	}

	public String getRelation2() {
		return this.relation2;
	}

	public void setRelation2(String relation2) {
		this.relation2 = relation2;
	}

	public Boolean getIsBidirectional() {
		return this.isBidirectional;
	}

	public void setIsBidirectional(Boolean isBidirectional) {
		this.isBidirectional = isBidirectional;
	}

	public Relation getInferredRelationObject() {
		if(inferredRelationObject == null && inferredRelation != null){
			inferredRelationObject = (Relation) getHibernateObject(Relation.class, "id", inferredRelation);
		}
		
		return inferredRelationObject;
	}

	public Relation getRelation1Object() {
		if(relation1Object == null && relation1 != null){
			relation1Object = (Relation) getHibernateObject(Relation.class, "id", relation1);
		}
		
		return relation1Object;
	}

	public Relation getRelation2Object() {
		if(relation2Object == null && relation2 != null){
			relation2Object = (Relation) getHibernateObject(Relation.class, "id", relation2);
		}
		
		return relation2Object;
	}

	public String getOntology() {
		if(ontologyObject == null && ontology != null){
			ontologyObject = (Ontology)getHibernateObject(Ontology.class, "ontology", ontology);
		}
		return ontology;
	}

	public Ontology getOntologyObject() {
		return ontologyObject;
	}

	public void setOntology(String ontology) {
		this.ontology = ontology;
	}

	
	
	
}
