<dataConfig>
  <dataSource type="JdbcDataSource" 
              driver="org.postgresql.Driver"
              url="jdbc:postgresql://localhost/gold_test"
              user="gold_user"
              password="gold_pass"/>

  <document>

    <!-- Add terms. -->
    <entity name="terms"
	    query="SELECT DISTINCT
		   'ontology_class' AS document_category,
		   id,
		   obo_namespace AS source,
		   label,
		   text_comment AS comment,
		   text_definition AS description
		   FROM cls WHERE is_obsolete = false"></entity>

    <!-- Add gene products. -->
    <entity name="gene_products"
	    query="SELECT DISTINCT
		   'bioentity' AS document_category,
		   g.id AS id,
		   g.symbol AS label,
		   g.full_name AS descriptive_name,
		   g.type_cls AS type,
		   g.taxon_cls AS taxon,
		   g.db AS source
		   FROM bioentity AS g"></entity>

    <!-- Add gene_annotations. -->
    <entity name="gene_annotation"
	    query="
SELECT DISTINCT
        'annotation' AS document_category,
        g.id || c.id || gene_annotation.reference_id || gene_annotation.assigned_by || gene_annotation.evidence_cls AS id,
        g.id AS bioentity_id,
        g.symbol AS bioentity_label,
        g.type_cls AS type,
        gene_annotation.with_expression AS with_expression,
        gene_annotation.composite_qualifier,
        gene_annotation.reference_id AS reference,
        gene_annotation.assigned_by AS source,
        gene_annotation.last_update_date AS date,
        gene_annotation.extension_expression,
        g.taxon_cls AS taxon,
        gene_annotation.cls AS annotation_class,
        c.label AS annotation_class_label,
        gene_annotation.evidence_cls AS evidence_type
        FROM gene_annotation INNER JOIN bioentity AS g ON (gene_annotation.bioentity=g.id) INNER JOIN cls AS c ON (gene_annotation.cls=c.id)">
        
        <entity name="evidence_with"
          query="SELECT with_info.with_xref AS evidence_with FROM with_info WHERE with_info.id='${gene_annotation.with_expression}'"></entity>
        
        <entity name="qualifier"
          query="SELECT qualifier_obj AS qualifier FROM composite_qualifier WHERE composite_qualifier.id='${gene_annotation.composite_qualifier}'"></entity>
        
        <!-- TODO: ensure the _reflexive_ closure is stored -->
         <entity name="isa_partof_closure"
          query="SELECT target_cls AS isa_partof_closure FROM inferred_isa_or_partof WHERE cls='${gene_annotation.annotation_class}'"></entity>
        <entity name="isa_partof_label_closure"
           query="SELECT c.label AS isa_partof_label_closure FROM inferred_isa_or_partof AS i INNER JOIN cls AS c ON (i.target_cls=c.id) WHERE i.cls='${gene_annotation.annotation_class}'"></entity>

        <entity name="regulates_closure"
           query="SELECT target_cls AS regulates_closure FROM inferred_regulates WHERE cls='${gene_annotation.annotation_class}'"></entity>
        <entity name="regulates_label_closure"
          query="SELECT c.label AS regulates_label_closure FROM inferred_regulates AS i INNER JOIN cls AS c ON (i.target_cls=c.id) WHERE i.cls='${gene_annotation.annotation_class}'"></entity>

        <entity name="annotation_extension_class"
          query="SELECT extension_expression.cls AS annotation_extension_class FROM extension_expression WHERE id='${gene_annotation.extension_expression}'"></entity>

        <entity name="annotation_extension_class_label"
          query="SELECT c.label AS annotation_extension_class_label FROM extension_expression AS x INNER JOIN cls AS c ON (x.cls=c.id) WHERE x.id='${gene_annotation.extension_expression}'"></entity>
        <entity name="annotation_extension_class_closure"
           query="SELECT target_cls AS annotation_extension_class_closure FROM extension_expression AS x INNER JOIN inferred_subclass_of AS i ON (x.cls=i.cls) WHERE x.id='${gene_annotation.extension_expression}'"></entity>
        <entity name="annotation_extension_class_label_closure"
          query="SELECT c.label AS annotation_extension_class_label_closure FROM extension_expression AS x INNER JOIN inferred_subclass_of AS i ON (x.cls=i.cls) INNER JOIN cls AS c ON (c.id=i.target_cls) WHERE x.id='${gene_annotation.extension_expression}'"></entity>
        
     </entity>

  </document>

</dataConfig>
