<!DOCTYPE html PUBLIC "-//W3C//DTD html 3.2//EN">
<html>
<head>
<title>HTML Rendering</title>
<link rel="stylesheet" type="text/css" href="../javahelp.css">
</head>
<body bgcolor="#ffffff">
<h1>HTML Rendering</h1>
<p>&nbsp;</p>
<p>It's possible to specify OBO-Edit renderers in HTML code. Most renderers are implemented in this way behind the scenes, but users can specify their own html code directly (using the "HTML Code" checkbox on any renderer configuration screen). This HTML code is standard HTML, with the addition of some special purpose expressions. These expressions are always enclosed between <b>$</b> characters (e.g. <b>$name$</b>), and are of two types:
</p>
<h3>Search Criterion IDs</h3>
<p>Any renderer specification can include a search criterion identifier, enclosed in <b>$</b> characters. The available search criteria ids in any OBO-Edit session can be discovered with the code:
</p>
<pre>
for(SearchCriterion&lt;?&gt; crit&nbsp;: FilterManager.getManager().getCriteria()) {
    System.out.println(crit.getID());
}
</pre>
<p>The search criterion id may be provided on its own (e.g. <b>$name$</b>), or it may include parameters in parentheses (e.g. <b>$synonym(&lt;li>&lt;i>no_synonyms&lt;/i>, *, &lt;li>$item$)$</b>). Search criteria may have up to three parameters, explained below. If any parameter is omitted, its default value is automatically used.
<b>Parameters</b>
</p>
<ol><li> <i>Default value</i> - The text to display if there are no values for this search criterion, or if an out-of-range index is given for the second parameter. The default value for this parameter is an empty string.
</li><li> <i>Value index</i>- The index of the value to use if this search criterion returns multiple values. If the value of this parameter is <b>*</b>, all the values are used and displayed according to the formatting specified in the third parameter. The default value for this parameter is 0.
</li><li> <i>Repeated value expression</i> - Another html expression used to format multi-valued search criteria. This expression will be repeated for each value of the given search criterion. In this expression, the variable <b>$item$</b> will be replaced with the current search criterion value.
</li></ol>
<h3>Results from other renderers</h3>
<p>A term may match several HTML renderers, so most HTML renderers will be written to wrap HTML data generated by some <i>other</i> renderer with additional HTML. The output from any nested renderers is wrapped in the <b>$term$</b> variable. So, for example, the following renderer expression would take the result of any previous renderers and append the word "obsolete" in italics after it:
</p>
<pre>
$term$ &lt;i&gt;(obsolete)&lt;/i&gt;
</pre>
<h2>HTML Expression Format</h2>
<p>The Ontology Editor Panel, Graph Editor, and Global Filter Manager allow users to specify an "HTML Expression" - the basic html expression used as the starting value for all other renderers. This expression uses the exact same syntax as the renderer expressions described above, except that the <b>$term$</b> variable is not available, because there are no previous renderer values to access.
</p><p>
<h3>Global Filters</h3>
The Global Filters feature (Config -> Global Filters) allows us to prepend or append a piece of text to
the names of a set of terms that are found by a given query.
</p><p>
To use this feature, we set up the query in the Term Renderers tab of the
Global Filter panel (Figure 1). We use the filter menus in the usual way. In
this example we are searchng for any terms with the dbxref "GOC:mtg_cardio".
</p><p><img border=0 src="../images/SetupHTMLRender.PNG">
</p><p>
To prepend the text "cardio term:" to the names of all terms with this dbxref
we must check the 'HTML Code' checkbox and then enter in the box the text
"cardio term: $term$". The text "$term$" shows where the name of the term will
be, relative to the text we are adding. We may also wish to change the colour
of the term names (see colour changing section).
</p><p>
If we wished to append some text we would insert "$term$: cardio term" in the
box instead.
</p><p>
Once the render is set up correctly we click 'Save Changes' and then go on to
search for the terms (Figure 2). 
</p><p><img border=0 src="../images/HTMLRenderSearch.PNG">
We can see that the term name change is
visible in the search results tab. Once we click on the name of one of the
found terms, the term will be visible in the Ontology Editor Panel with the
text prepended (Figure 3).
</p><p><img border=0 src="../images/HTMLRenderOntologyPanel.PNG">
 The text is not prepended in the Text Editor Panel
(Figure 4).
</p><p><img border=0 src="../images/HTMLRenderTextEditor.PNG">
</p>
</body>
</html>
