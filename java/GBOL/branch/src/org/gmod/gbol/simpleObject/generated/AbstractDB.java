package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * DB generated by hbm2java
 */
public abstract class AbstractDB extends AbstractSimpleObject implements java.io.Serializable {


     private Integer dbId;
     private String name;
     private String description;
     private String urlPrefix;
     private String url;

    public AbstractDB() {
    }

	
    public AbstractDB(String name) {
        this.name = name;
    }
    public AbstractDB(String name, String description, String urlPrefix, String url) {
       this.name = name;
       this.description = description;
       this.urlPrefix = urlPrefix;
       this.url = url;
    }
   
    public Integer getDbId() {
        return this.dbId;
    }
    
    public void setDbId(Integer dbId) {
        this.dbId = dbId;
    }
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    public String getUrlPrefix() {
        return this.urlPrefix;
    }
    
    public void setUrlPrefix(String urlPrefix) {
        this.urlPrefix = urlPrefix;
    }
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractDB) ) return false;
		 AbstractDB castOther = ( AbstractDB ) other; 
         
		 return ( (this.getName()==castOther.getName()) || ( this.getName()!=null && castOther.getName()!=null && this.getName().equals(castOther.getName()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getName() == null ? 0 : this.getName().hashCode() );
         
         
         
         return result;
   }   

public AbstractDB generateClone() {
	AbstractDB cloned = new DB(); 
    	   cloned.name = this.name;
    	   cloned.description = this.description;
    	   cloned.urlPrefix = this.urlPrefix;
    	   cloned.url = this.url;
	return cloned;
}


}


