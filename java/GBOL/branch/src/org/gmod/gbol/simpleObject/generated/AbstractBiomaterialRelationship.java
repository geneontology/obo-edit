package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * BiomaterialRelationship generated by hbm2java
 */
public abstract class AbstractBiomaterialRelationship extends AbstractSimpleObject implements java.io.Serializable {


     private Integer biomaterialRelationshipId;
     private CVTerm type;
     private Biomaterial subjectBiomaterial;
     private Biomaterial objectBiomaterial;

    public AbstractBiomaterialRelationship() {
    }

    public AbstractBiomaterialRelationship(CVTerm type, Biomaterial subjectBiomaterial, Biomaterial objectBiomaterial) {
       this.type = type;
       this.subjectBiomaterial = subjectBiomaterial;
       this.objectBiomaterial = objectBiomaterial;
    }
   
    public Integer getBiomaterialRelationshipId() {
        return this.biomaterialRelationshipId;
    }
    
    public void setBiomaterialRelationshipId(Integer biomaterialRelationshipId) {
        this.biomaterialRelationshipId = biomaterialRelationshipId;
    }
    public CVTerm getType() {
        return this.type;
    }
    
    public void setType(CVTerm type) {
        this.type = type;
    }
    public Biomaterial getSubjectBiomaterial() {
        return this.subjectBiomaterial;
    }
    
    public void setSubjectBiomaterial(Biomaterial subjectBiomaterial) {
        this.subjectBiomaterial = subjectBiomaterial;
    }
    public Biomaterial getObjectBiomaterial() {
        return this.objectBiomaterial;
    }
    
    public void setObjectBiomaterial(Biomaterial objectBiomaterial) {
        this.objectBiomaterial = objectBiomaterial;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractBiomaterialRelationship) ) return false;
		 AbstractBiomaterialRelationship castOther = ( AbstractBiomaterialRelationship ) other; 
         
		 return ( (this.getType()==castOther.getType()) || ( this.getType()!=null && castOther.getType()!=null && this.getType().equals(castOther.getType()) ) )
 && ( (this.getSubjectBiomaterial()==castOther.getSubjectBiomaterial()) || ( this.getSubjectBiomaterial()!=null && castOther.getSubjectBiomaterial()!=null && this.getSubjectBiomaterial().equals(castOther.getSubjectBiomaterial()) ) )
 && ( (this.getObjectBiomaterial()==castOther.getObjectBiomaterial()) || ( this.getObjectBiomaterial()!=null && castOther.getObjectBiomaterial()!=null && this.getObjectBiomaterial().equals(castOther.getObjectBiomaterial()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         result = 37 * result + ( getSubjectBiomaterial() == null ? 0 : this.getSubjectBiomaterial().hashCode() );
         result = 37 * result + ( getObjectBiomaterial() == null ? 0 : this.getObjectBiomaterial().hashCode() );
         return result;
   }   

public AbstractBiomaterialRelationship generateClone() {
	AbstractBiomaterialRelationship cloned = new BiomaterialRelationship(); 
    	   cloned.type = this.type;
    	   cloned.subjectBiomaterial = this.subjectBiomaterial;
    	   cloned.objectBiomaterial = this.objectBiomaterial;
	return cloned;
}


}


