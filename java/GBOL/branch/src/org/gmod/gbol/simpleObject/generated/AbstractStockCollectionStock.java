package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * StockCollectionStock generated by hbm2java
 */
public abstract class AbstractStockCollectionStock extends AbstractSimpleObject implements java.io.Serializable {


     private Integer stockCollectionStockId;
     private StockCollection stockCollection;
     private Stock stock;

    public AbstractStockCollectionStock() {
    }

    public AbstractStockCollectionStock(StockCollection stockCollection, Stock stock) {
       this.stockCollection = stockCollection;
       this.stock = stock;
    }
   
    public Integer getStockCollectionStockId() {
        return this.stockCollectionStockId;
    }
    
    public void setStockCollectionStockId(Integer stockCollectionStockId) {
        this.stockCollectionStockId = stockCollectionStockId;
    }
    public StockCollection getStockCollection() {
        return this.stockCollection;
    }
    
    public void setStockCollection(StockCollection stockCollection) {
        this.stockCollection = stockCollection;
    }
    public Stock getStock() {
        return this.stock;
    }
    
    public void setStock(Stock stock) {
        this.stock = stock;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractStockCollectionStock) ) return false;
		 AbstractStockCollectionStock castOther = ( AbstractStockCollectionStock ) other; 
         
		 return ( (this.getStockCollection()==castOther.getStockCollection()) || ( this.getStockCollection()!=null && castOther.getStockCollection()!=null && this.getStockCollection().equals(castOther.getStockCollection()) ) )
 && ( (this.getStock()==castOther.getStock()) || ( this.getStock()!=null && castOther.getStock()!=null && this.getStock().equals(castOther.getStock()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getStockCollection() == null ? 0 : this.getStockCollection().hashCode() );
         result = 37 * result + ( getStock() == null ? 0 : this.getStock().hashCode() );
         return result;
   }   

public AbstractStockCollectionStock generateClone() {
	AbstractStockCollectionStock cloned = new StockCollectionStock(); 
    	   cloned.stockCollection = this.stockCollection;
    	   cloned.stock = this.stock;
	return cloned;
}


}


