package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 

import java.util.HashSet;
import java.util.Set;

/**
 * ElementResult generated by hbm2java
 */
public abstract class AbstractElementResult extends AbstractSimpleObject implements java.io.Serializable {


     private Integer elementResultId;
     private Element element;
     private Quantification quantification;
     private double signal;
     private Set<ElementResultRelationship> childElementResultRelationships = new HashSet<ElementResultRelationship>(0);
     private Set<ElementResultRelationship> parentElementResultRelationships = new HashSet<ElementResultRelationship>(0);

    public AbstractElementResult() {
    }

	
    public AbstractElementResult(Element element, Quantification quantification, double signal) {
        this.element = element;
        this.quantification = quantification;
        this.signal = signal;
    }
    public AbstractElementResult(Element element, Quantification quantification, double signal, Set<ElementResultRelationship> childElementResultRelationships, Set<ElementResultRelationship> parentElementResultRelationships) {
       this.element = element;
       this.quantification = quantification;
       this.signal = signal;
       this.childElementResultRelationships = childElementResultRelationships;
       this.parentElementResultRelationships = parentElementResultRelationships;
    }
   
    public Integer getElementResultId() {
        return this.elementResultId;
    }
    
    public void setElementResultId(Integer elementResultId) {
        this.elementResultId = elementResultId;
    }
    public Element getElement() {
        return this.element;
    }
    
    public void setElement(Element element) {
        this.element = element;
    }
    public Quantification getQuantification() {
        return this.quantification;
    }
    
    public void setQuantification(Quantification quantification) {
        this.quantification = quantification;
    }
    public double getSignal() {
        return this.signal;
    }
    
    public void setSignal(double signal) {
        this.signal = signal;
    }
    public Set<ElementResultRelationship> getChildElementResultRelationships() {
        return this.childElementResultRelationships;
    }
    
    public void setChildElementResultRelationships(Set<ElementResultRelationship> childElementResultRelationships) {
        this.childElementResultRelationships = childElementResultRelationships;
    }
    public Set<ElementResultRelationship> getParentElementResultRelationships() {
        return this.parentElementResultRelationships;
    }
    
    public void setParentElementResultRelationships(Set<ElementResultRelationship> parentElementResultRelationships) {
        this.parentElementResultRelationships = parentElementResultRelationships;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractElementResult) ) return false;
		 AbstractElementResult castOther = ( AbstractElementResult ) other; 
         
		 return ( (this.getElement()==castOther.getElement()) || ( this.getElement()!=null && castOther.getElement()!=null && this.getElement().equals(castOther.getElement()) ) )
 && ( (this.getQuantification()==castOther.getQuantification()) || ( this.getQuantification()!=null && castOther.getQuantification()!=null && this.getQuantification().equals(castOther.getQuantification()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getElement() == null ? 0 : this.getElement().hashCode() );
         result = 37 * result + ( getQuantification() == null ? 0 : this.getQuantification().hashCode() );
         
         
         
         return result;
   }   

public AbstractElementResult generateClone() {
	AbstractElementResult cloned = new ElementResult(); 
    	   cloned.element = this.element;
    	   cloned.quantification = this.quantification;
    	   cloned.signal = this.signal;
    	   cloned.childElementResultRelationships = this.childElementResultRelationships;
    	   cloned.parentElementResultRelationships = this.parentElementResultRelationships;
	return cloned;
}


}


