package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * ContactRelationship generated by hbm2java
 */
public abstract class AbstractContactRelationship extends AbstractSimpleObject implements java.io.Serializable {


     private Integer contactRelationshipId;
     private Contact subjectContact;
     private CVTerm type;
     private Contact objectContact;

    public AbstractContactRelationship() {
    }

    public AbstractContactRelationship(Contact subjectContact, CVTerm type, Contact objectContact) {
       this.subjectContact = subjectContact;
       this.type = type;
       this.objectContact = objectContact;
    }
   
    public Integer getContactRelationshipId() {
        return this.contactRelationshipId;
    }
    
    public void setContactRelationshipId(Integer contactRelationshipId) {
        this.contactRelationshipId = contactRelationshipId;
    }
    public Contact getSubjectContact() {
        return this.subjectContact;
    }
    
    public void setSubjectContact(Contact subjectContact) {
        this.subjectContact = subjectContact;
    }
    public CVTerm getType() {
        return this.type;
    }
    
    public void setType(CVTerm type) {
        this.type = type;
    }
    public Contact getObjectContact() {
        return this.objectContact;
    }
    
    public void setObjectContact(Contact objectContact) {
        this.objectContact = objectContact;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractContactRelationship) ) return false;
		 AbstractContactRelationship castOther = ( AbstractContactRelationship ) other; 
         
		 return ( (this.getSubjectContact()==castOther.getSubjectContact()) || ( this.getSubjectContact()!=null && castOther.getSubjectContact()!=null && this.getSubjectContact().equals(castOther.getSubjectContact()) ) )
 && ( (this.getType()==castOther.getType()) || ( this.getType()!=null && castOther.getType()!=null && this.getType().equals(castOther.getType()) ) )
 && ( (this.getObjectContact()==castOther.getObjectContact()) || ( this.getObjectContact()!=null && castOther.getObjectContact()!=null && this.getObjectContact().equals(castOther.getObjectContact()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getSubjectContact() == null ? 0 : this.getSubjectContact().hashCode() );
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         result = 37 * result + ( getObjectContact() == null ? 0 : this.getObjectContact().hashCode() );
         return result;
   }   

public AbstractContactRelationship generateClone() {
	AbstractContactRelationship cloned = new ContactRelationship(); 
    	   cloned.subjectContact = this.subjectContact;
    	   cloned.type = this.type;
    	   cloned.objectContact = this.objectContact;
	return cloned;
}


}


