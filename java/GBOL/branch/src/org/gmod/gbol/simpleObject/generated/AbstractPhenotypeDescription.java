package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * PhenotypeDescription generated by hbm2java
 */
public abstract class AbstractPhenotypeDescription extends AbstractSimpleObject implements java.io.Serializable {


     private Integer phenotypeDescriptionId;
     private Environment environment;
     private CVTerm type;
     private Publication publication;
     private Genotype genotype;
     private String description;

    public AbstractPhenotypeDescription() {
    }

    public AbstractPhenotypeDescription(Environment environment, CVTerm type, Publication publication, Genotype genotype, String description) {
       this.environment = environment;
       this.type = type;
       this.publication = publication;
       this.genotype = genotype;
       this.description = description;
    }
   
    public Integer getPhenotypeDescriptionId() {
        return this.phenotypeDescriptionId;
    }
    
    public void setPhenotypeDescriptionId(Integer phenotypeDescriptionId) {
        this.phenotypeDescriptionId = phenotypeDescriptionId;
    }
    public Environment getEnvironment() {
        return this.environment;
    }
    
    public void setEnvironment(Environment environment) {
        this.environment = environment;
    }
    public CVTerm getType() {
        return this.type;
    }
    
    public void setType(CVTerm type) {
        this.type = type;
    }
    public Publication getPublication() {
        return this.publication;
    }
    
    public void setPublication(Publication publication) {
        this.publication = publication;
    }
    public Genotype getGenotype() {
        return this.genotype;
    }
    
    public void setGenotype(Genotype genotype) {
        this.genotype = genotype;
    }
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractPhenotypeDescription) ) return false;
		 AbstractPhenotypeDescription castOther = ( AbstractPhenotypeDescription ) other; 
         
		 return ( (this.getEnvironment()==castOther.getEnvironment()) || ( this.getEnvironment()!=null && castOther.getEnvironment()!=null && this.getEnvironment().equals(castOther.getEnvironment()) ) )
 && ( (this.getType()==castOther.getType()) || ( this.getType()!=null && castOther.getType()!=null && this.getType().equals(castOther.getType()) ) )
 && ( (this.getPublication()==castOther.getPublication()) || ( this.getPublication()!=null && castOther.getPublication()!=null && this.getPublication().equals(castOther.getPublication()) ) )
 && ( (this.getGenotype()==castOther.getGenotype()) || ( this.getGenotype()!=null && castOther.getGenotype()!=null && this.getGenotype().equals(castOther.getGenotype()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getEnvironment() == null ? 0 : this.getEnvironment().hashCode() );
         result = 37 * result + ( getType() == null ? 0 : this.getType().hashCode() );
         result = 37 * result + ( getPublication() == null ? 0 : this.getPublication().hashCode() );
         result = 37 * result + ( getGenotype() == null ? 0 : this.getGenotype().hashCode() );
         
         return result;
   }   

public AbstractPhenotypeDescription generateClone() {
	AbstractPhenotypeDescription cloned = new PhenotypeDescription(); 
    	   cloned.environment = this.environment;
    	   cloned.type = this.type;
    	   cloned.publication = this.publication;
    	   cloned.genotype = this.genotype;
    	   cloned.description = this.description;
	return cloned;
}


}


