package org.gmod.gbol.simpleObject.generated;


import org.gmod.gbol.simpleObject.*; 


/**
 * FeatureDBXref generated by hbm2java
 */
public abstract class AbstractFeatureDBXref extends AbstractSimpleObject implements java.io.Serializable {


     private Integer featureDBXrefId;
     private Feature feature;
     private DBXref dbxref;
     private boolean isCurrent;

    public AbstractFeatureDBXref() {
    }

    public AbstractFeatureDBXref(Feature feature, DBXref dbxref, boolean isCurrent) {
       this.feature = feature;
       this.dbxref = dbxref;
       this.isCurrent = isCurrent;
    }
   
    public Integer getFeatureDBXrefId() {
        return this.featureDBXrefId;
    }
    
    public void setFeatureDBXrefId(Integer featureDBXrefId) {
        this.featureDBXrefId = featureDBXrefId;
    }
    public Feature getFeature() {
        return this.feature;
    }
    
    public void setFeature(Feature feature) {
        this.feature = feature;
    }
    public DBXref getDbxref() {
        return this.dbxref;
    }
    
    public void setDbxref(DBXref dbxref) {
        this.dbxref = dbxref;
    }
    public boolean isIsCurrent() {
        return this.isCurrent;
    }
    
    public void setIsCurrent(boolean isCurrent) {
        this.isCurrent = isCurrent;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AbstractFeatureDBXref) ) return false;
		 AbstractFeatureDBXref castOther = ( AbstractFeatureDBXref ) other; 
         
		 return ( (this.getFeature()==castOther.getFeature()) || ( this.getFeature()!=null && castOther.getFeature()!=null && this.getFeature().equals(castOther.getFeature()) ) )
 && ( (this.getDbxref()==castOther.getDbxref()) || ( this.getDbxref()!=null && castOther.getDbxref()!=null && this.getDbxref().equals(castOther.getDbxref()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         
         result = 37 * result + ( getFeature() == null ? 0 : this.getFeature().hashCode() );
         result = 37 * result + ( getDbxref() == null ? 0 : this.getDbxref().hashCode() );
         
         return result;
   }   

public AbstractFeatureDBXref generateClone() {
	AbstractFeatureDBXref cloned = new FeatureDBXref(); 
    	   cloned.feature = this.feature;
    	   cloned.dbxref = this.dbxref;
    	   cloned.isCurrent = this.isCurrent;
	return cloned;
}


}


