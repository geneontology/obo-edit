package org.gmod.gbol.simpleObject;

import java.util.ArrayList;
import java.util.Collection;

/*
 * Autogenerated extension of org.gmod.gbol.simpleObject.generated.Publication.
 * Add custom code to this file. 
 *
 * Author: Robert Bruggner, rbruggner@berkeleybop.org
 *
*/

public class Publication extends org.gmod.gbol.simpleObject.generated.AbstractPublication {

	private static final long serialVersionUID = 1L;

	public Publication(){
		super();
	}

	@Override
	public Collection<AbstractSimpleObject> getWriteObjects() {
		ArrayList<AbstractSimpleObject> writeObjects = new ArrayList<AbstractSimpleObject>();
		// Have to write yourself
		writeObjects.add(this);
		
		// Singletons
		writeObjects.addAll(this.getType().getWriteObjects());
		
		// Multiples
		for (PublicationAuthor pa : this.getPublicationAuthors())
			writeObjects.addAll(pa.getWriteObjects());
		for (PublicationDBXref pdbx : this.getPublicationDBXrefs())
			writeObjects.addAll(pdbx.getWriteObjects());

		// Specifically not traversing PublicationRelationships, since that 
		// could involve us in a loop or a very long traversal

		return writeObjects;
	}

	public AbstractSimpleObjectIterator getWriteableObjects()
	{
		return new SimpleObjectIterator(this);
	}

	private static class SimpleObjectIterator extends AbstractSimpleObjectIterator
	{
		private static class Status extends AbstractSimpleObjectIterator.Status
		{
			public static final int type = 1;
			public static final int pubAuthors = 2;
			public static final int pubDbxrefs = 3;
		}
				
		public SimpleObjectIterator(Publication pub)
		{
			super(pub);
		}

		public AbstractSimpleObject next()
		{
			Publication pub = (Publication)object;
			AbstractSimpleObject retVal = null;
			if (status == Status.self) {
				retVal = peek();
				processSingletonIterator(Status.type, pub.getType());
			}
			else {
				retVal = soIter.next();
				if (status == Status.type) {
					processCollectionIterators(Status.pubAuthors, pub.getPublicationAuthors());
				}
				if (status == Status.pubAuthors) {
					processCollectionIterators(Status.pubDbxrefs, pub.getPublicationDBXrefs());
				}
				if (status == Status.pubDbxrefs) {
					processLastCollectionIterator();
				}
			}
			current = retVal;
			return retVal;
		}
	}
	
}
