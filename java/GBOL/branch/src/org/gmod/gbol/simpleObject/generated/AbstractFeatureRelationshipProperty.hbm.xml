<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated Sep 3, 2008 1:58:22 PM by Hibernate Tools 3.2.1.GA -->
<hibernate-mapping>
    <class name="org.gmod.gbol.simpleObject.generated.AbstractFeatureRelationshipProperty" table="feature_relationshipprop" schema="public">
        <meta attribute="chadoModule" inherit="false">sequence</meta>

        <meta attribute="scope-class" inherit="false">public abstract</meta>

        <comment>Extensible properties for feature_relationships. Analagous structure to featureprop. This table is largely optional and not used with a high frequency. Typical
        scenarios may be if one wishes to attach additional data to a feature_relationship - for example to say that the feature_relationship is only true in certain
        contexts.</comment>

        <id name="featureRelationshipPropertyId" type="java.lang.Integer">
            <column name="feature_relationshipprop_id" />

            <generator class="sequence">
                <param name="sequence">feature_relationshipprop_feature_relationshipprop_id_seq</param>
            </generator>
        </id>

        <discriminator column="feature_relationshipprop_id" insert="false" />

        <many-to-one name="type" class="org.gmod.gbol.simpleObject.CVTerm" fetch="select">
            <meta attribute="use-in-equals" inherit="false">true</meta>

            <column name="type_id" not-null="true">
                <comment>The name of the property/slot is a cvterm. The meaning of the property is defined in that cvterm. Currently there is no standard ontology for
                feature_relationship property types.</comment>
            </column>
        </many-to-one>

        <many-to-one name="featureRelationship" class="org.gmod.gbol.simpleObject.FeatureRelationship" fetch="select">
            <meta attribute="use-in-equals" inherit="false">true</meta>

            <column name="feature_relationship_id" not-null="true" />
        </many-to-one>

        <property name="value" type="string">
            <column name="value">
                <comment>The value of the property, represented as text. Numeric values are converted to their text representation. This is less efficient than using native
                database types, but is easier to query.</comment>
            </column>
        </property>

        <property name="rank" type="int">
            <meta attribute="use-in-equals" inherit="false">true</meta>

            <column name="rank" not-null="true">
                <comment>Property-Value ordering. Any feature_relationship can have multiple values for any particular property type - these are ordered in a list using rank,
                counting from zero. For properties that are single-valued rather than multi-valued, the default 0 value should be used.</comment>
            </column>
        </property>

        <set name="featureRelationshipPropertyPublications" inverse="true">
            <key>
                <column name="feature_relationshipprop_id" not-null="true" />
            </key>

            <one-to-many class="org.gmod.gbol.simpleObject.FeatureRelationshipPropertyPublication" />
        </set>
    </class>
</hibernate-mapping>

